{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-6137217a074dac51.js","node_modules/@parcel/runtime-js/lib/runtime-f02d324aa96f1e85.js","node_modules/@parcel/runtime-js/lib/runtime-8a4244b59d970ced.js","src/projectile.js","src/player-invader.js","src/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hT0i1\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fU7c6\")).toString();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"7GeUN\\\":\\\"index.b7d3aa40.js\\\",\\\"hT0i1\\\":\\\"spaceship.5ee0230a.png\\\",\\\"fU7c6\\\":\\\"invader.b333f5fa.png\\\"}\"));","import { c } from \"./player-invader\";\r\n\r\nclass Projectile {\r\n  constructor({ position, velocity }) {\r\n    (this.position = position), (this.velocity = velocity), (this.radius = 4);\r\n  }\r\n  draw() {\r\n    c.beginPath();\r\n    c.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2);\r\n    c.fillStyle = \"red\";\r\n    c.fill();\r\n    c.closePath;\r\n  }\r\n  update() {\r\n    this.draw();\r\n    this.position.x += this.velocity.x;\r\n    this.position.y += this.velocity.y;\r\n  }\r\n}\r\n\r\nclass Particle {\r\n  constructor({ position, velocity, radius, color, fades }) {\r\n    (this.position = position),\r\n      (this.velocity = velocity),\r\n      (this.radius = radius),\r\n      (this.color = color),\r\n      (this.opacity = 1);\r\n      (this.fades = fades);\r\n  }\r\n  draw() {\r\n    c.save()\r\n    c.globalAlpha = this.opacity;\r\n    c.beginPath();\r\n    c.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2);\r\n    c.fillStyle = this.color;\r\n    c.fill();\r\n    c.closePath;\r\n    c.restore()\r\n  }\r\n  update() {\r\n    this.draw();\r\n    this.position.x += this.velocity.x;\r\n    this.position.y += this.velocity.y;\r\n    if(this.fades){\r\n    this.opacity -= 0.01\r\n    }\r\n  }\r\n}\r\n\r\nclass InvaderProjectile {\r\n  constructor({ position, velocity }) {\r\n    this.position = position;\r\n    this.velocity = velocity;\r\n    this.width = 4;\r\n    this.height = 10;\r\n  }\r\n  draw() {\r\n    c.fillStyle = \"white\";\r\n    c.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n  update() {\r\n    this.draw();\r\n    this.position.x += this.velocity.x;\r\n    this.position.y += this.velocity.y;\r\n  }\r\n}\r\n\r\nexport { Projectile, Particle, InvaderProjectile };\r\n","import { player } from \"./index\";\r\nimport { InvaderProjectile } from \"./projectile\";\r\n\r\n\r\nconst canvas = document.querySelector(\"canvas\");\r\nconst c = canvas.getContext(\"2d\");\r\n\r\n\r\n\r\nclass Player {\r\n  constructor() {\r\n    this.velocity = {\r\n      x: 0,\r\n      y: 0,\r\n    };\r\n    this.rotation = 0;\r\n    this.opacity = 1\r\n    let image = new Image();\r\n    image.src = require(\"../img/spaceship.png\");\r\n    image.onload = () => {\r\n      const scale = 0.15;\r\n      this.image = image;\r\n      this.width = image.width * scale;\r\n      this.height = image.height * scale;\r\n      this.position = {\r\n        x: canvas.width / 2 - this.width / 2,\r\n        y: canvas.height - this.height - 20,\r\n      };\r\n    };\r\n  }\r\n  draw() {\r\n    // c.fillStyle = \"red\";\r\n    // c.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n    c.save();\r\n    c.globalAlpha = this.opacity\r\n    c.translate(\r\n      player.position.x + player.width / 2,\r\n      player.position.y + player.height / 2\r\n    );\r\n    c.rotate(this.rotation);\r\n    c.translate(\r\n      -player.position.x - player.width / 2,\r\n      -player.position.y - player.height / 2\r\n    );\r\n    c.drawImage(\r\n      this.image,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n    c.restore();\r\n  }\r\n  update() {\r\n    if (this.image) {\r\n      this.draw();\r\n      this.position.x += this.velocity.x;\r\n    }\r\n  }\r\n}\r\n\r\nclass Invader {\r\n  constructor({ position }) {\r\n    this.velocity = {\r\n      x: 0,\r\n      y: 0,\r\n    };\r\n\r\n    let image = new Image();\r\n    image.src = require(\"../img/invader.png\");\r\n    image.onload = () => {\r\n      const scale = 1;\r\n      this.image = image;\r\n      this.width = image.width * scale;\r\n      this.height = image.height * scale;\r\n      this.position = {\r\n        x: position.x,\r\n        y: position.y,\r\n      };\r\n    };\r\n  }\r\n  draw() {\r\n    c.drawImage(\r\n      this.image,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n  }\r\n  update({ velocity }) {\r\n    if (this.image) {\r\n      this.draw();\r\n      this.position.x += velocity.x;\r\n      this.position.y += velocity.y;\r\n    }\r\n  }\r\n  shoot(invaderProjectiles){\r\n    invaderProjectiles.push(new InvaderProjectile({\r\n      position:{\r\n        x: this.position.x + this.width/2,\r\n        y:this.position.y + this.height\r\n      },\r\n      velocity:{\r\n        x: 0,\r\n        y: 5,\r\n      }\r\n    }))\r\n  }\r\n}\r\n\r\nclass Grid {\r\n  constructor() {\r\n    this.position = {\r\n      x: 0,\r\n      y: 0,\r\n    };\r\n    this.velocity = {\r\n      x: 3,\r\n      y: 0,\r\n    };\r\n    this.invaders = [];\r\n    const columns = Math.floor(Math.random() * 10 + 5);\r\n    const rows = Math.floor(Math.random() * 5 + 2);\r\n\r\n    this.width = columns * 30;\r\n\r\n    for (let x = 0; x < columns; x++) {\r\n      for (let y = 0; y < rows; y++) {\r\n        this.invaders.push(\r\n          new Invader({\r\n            position: {\r\n              x: x * 30,\r\n              y: y * 30,\r\n            },\r\n          })\r\n        );\r\n      }\r\n    }\r\n    console.log(this.invaders);\r\n  }\r\n  update() {\r\n    this.position.x += this.velocity.x;\r\n    this.position.y += this.velocity.y;\r\n\r\n    this.velocity.y = 0;\r\n\r\n    if (this.position.x + this.width >= canvas.width || this.position.x <= 0) {\r\n      this.velocity.x = -this.velocity.x;\r\n      this.velocity.y = 30;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Player, c, canvas, Grid };\r\n","import { Player, c, canvas, Grid } from \"./player-invader\";\r\nimport { Particle, Projectile } from \"./projectile\";\r\n\r\ncanvas.width = 1024;\r\ncanvas.height = 576;\r\n\r\nconst scoreEl =document.querySelector(\"#scoreEl\")\r\nconst player = new Player();\r\nconst projectiles = [];\r\nconst grids = [];\r\nconst invaderProjectiles = [];\r\nconst particles = [];\r\n\r\nconst keys = {\r\n  a: {\r\n    pressed: false,\r\n  },\r\n  d: {\r\n    pressed: false,\r\n  },\r\n  space: {\r\n    pressed: false,\r\n  },\r\n};\r\n\r\nlet frames = 0;\r\nlet randomInterval = Math.floor(Math.random() * 500 + 500);\r\nlet game = {\r\n  over: false,\r\n  active: true\r\n}\r\n\r\nlet score = 0\r\n\r\nfor (let i = 0; i < 100; i++) {\r\n  particles.push(\r\n    new Particle({\r\n      position: {\r\n        x: Math.random() * canvas.width,\r\n        y: Math.random() * canvas.height,\r\n      },\r\n      velocity: {\r\n        x: 0,\r\n        y: 0.5,\r\n      },\r\n      radius: Math.random() * 3,\r\n      color: \"white\",\r\n    })\r\n  );\r\n}\r\n\r\nfunction createParticules({ object, color, fades }) {\r\n  for (let i = 0; i < 15; i++) {\r\n    particles.push(\r\n      new Particle({\r\n        position: {\r\n          x: object.position.x + object.width / 2,\r\n          y: object.position.y + object.height / 2,\r\n        },\r\n        velocity: {\r\n          x: (Math.random() - 0.5) * 2,\r\n          y: (Math.random() - 0.5) * 2,\r\n        },\r\n        radius: Math.random() * 3,\r\n        color: color || \"#BAA0DE\",\r\n        fades,\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nfunction animate() {\r\n  if(!game.active)return\r\n  requestAnimationFrame(animate);\r\n  c.fillStyle = \"black\";\r\n  c.fillRect(0, 0, canvas.width, canvas.height);\r\n  player.update();\r\n  particles.forEach((particle, i) => {\r\n    if (particle.position.y - particle.radius >= canvas.height) {\r\n      (particle.position.x = Math.random() * canvas.width),\r\n        (particle.position.y = -particle.radius);\r\n    }\r\n    if (particle.opacity <= 0) {\r\n      setTimeout(() => {\r\n        particles.splice(i, 1);\r\n      }, 0);\r\n    } else {\r\n      particle.update();\r\n    }\r\n  });\r\n  invaderProjectiles.forEach((invaderProjectile, index) => {\r\n    if (\r\n      invaderProjectile.position.y + invaderProjectile.height >=\r\n      canvas.height\r\n    ) {\r\n      setTimeout(() => {\r\n        invaderProjectiles.splice(index, 1);\r\n      }, 0);\r\n    } else {\r\n      invaderProjectile.update();\r\n    }\r\n    //projectile hits players\r\n    if (\r\n      invaderProjectile.position.y + invaderProjectile.height >=\r\n        player.position.y &&\r\n      invaderProjectile.position.x + invaderProjectile.width >=\r\n        player.position.x &&\r\n      invaderProjectile.position.x <= player.position.x + player.width\r\n    ) {\r\n     \r\n      setTimeout(() => {\r\n        invaderProjectiles.splice(index, 1);\r\n        player.opacity = 0\r\n        game.over = true\r\n      }, 0);\r\n      setTimeout(() => {\r\n        game.active = false\r\n       }, 2000);\r\n      createParticules({\r\n        object: player,\r\n        color: \"white\",\r\n        fades: true,\r\n      });\r\n    }\r\n  });\r\n  projectiles.forEach((projectile, index) => {\r\n    if (projectile.position.y + projectile.radius <= 0) {\r\n      setTimeout(() => {\r\n        projectiles.splice(index, 1);\r\n      }, 0);\r\n    } else {\r\n      projectile.update();\r\n    }\r\n  });\r\n\r\n  grids.forEach((grid, gridIndex) => {\r\n    grid.update();\r\n    if (frames % 100 === 0 && grid.invaders.length > 0) {\r\n      grid.invaders[Math.floor(Math.random() * grid.invaders.length)].shoot(\r\n        invaderProjectiles\r\n      );\r\n    }\r\n    grid.invaders.forEach((invader, i) => {\r\n      invader.update({ velocity: grid.velocity });\r\n\r\n      projectiles.forEach((projectile, j) => {\r\n        if (\r\n          projectile.position.y - projectile.radius <=\r\n            invader.position.y + invader.height &&\r\n          projectile.position.x + projectile.radius >= invader.position.x &&\r\n          projectile.position.x - projectile.radius <=\r\n            invader.position.x + invader.width &&\r\n          projectile.position.y + projectile.radius >= invader.position.y\r\n        ) {\r\n          setTimeout(() => {\r\n            const invaderFound = grid.invaders.find(\r\n              (invader2) => invader2 == invader\r\n            );\r\n            const projectileFound = projectiles.find(\r\n              (projectile2) => projectile2 == projectile\r\n            );\r\n            if (invaderFound && projectileFound) {\r\n              score += 100\r\n              scoreEl.innerHTML = score\r\n              createParticules({\r\n                object: invader,\r\n                fades: true,\r\n              });\r\n              grid.invaders.splice(i, 1);\r\n              projectiles.splice(j, 1);\r\n\r\n              if (grid.invaders.length > 0) {\r\n                const firsInvader = grid.invaders[0];\r\n                const lastInvader = grid.invaders[grid.invaders.length - 1];\r\n\r\n                grid.width =\r\n                  lastInvader.position.x -\r\n                  firsInvader.position.x +\r\n                  lastInvader.width;\r\n                grid.position.x = firsInvader.position.x;\r\n              } else {\r\n                grids.splice(gridIndex, 1);\r\n              }\r\n            }\r\n          }, 0);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  if (keys.a.pressed && player.position.x >= 0) {\r\n    player.velocity.x = -7;\r\n    player.rotation = -0.15;\r\n  } else if (\r\n    keys.d.pressed &&\r\n    player.position.x + player.width <= canvas.width\r\n  ) {\r\n    player.velocity.x = 7;\r\n    player.rotation = 0.15;\r\n  } else {\r\n    player.velocity.x = 0;\r\n    player.rotation = 0;\r\n  }\r\n  if (frames % randomInterval === 0) {\r\n    grids.push(new Grid());\r\n  }\r\n\r\n  frames++;\r\n}\r\nanimate();\r\n\r\n(function () {\r\n  addEventListener(\"keydown\", ({ key }) => {\r\n    if(game.over)return\r\n\r\n    switch (key) {\r\n      case \"a\":\r\n        // console.log(\"left\");\r\n        keys.a.pressed = true;\r\n        break;\r\n      case \"d\":\r\n        // console.log(\"right\");\r\n        keys.d.pressed = true;\r\n        break;\r\n      case \" \":\r\n        // console.log(\"space\");\r\n        projectiles.push(\r\n          new Projectile({\r\n            position: {\r\n              x: player.position.x + player.width / 2,\r\n              y: player.position.y,\r\n            },\r\n            velocity: {\r\n              x: 0,\r\n              y: -12,\r\n            },\r\n          })\r\n        );\r\n        // console.log(projectiles);\r\n        break;\r\n    }\r\n  });\r\n})();\r\n\r\n(function () {\r\n  addEventListener(\"keyup\", ({ key }) => {\r\n    switch (key) {\r\n      case \"a\":\r\n        // console.log(\"left\");\r\n        keys.a.pressed = false;\r\n        break;\r\n      case \"d\":\r\n        // console.log(\"right\");\r\n        keys.d.pressed = false;\r\n        break;\r\n      case \" \":\r\n        // console.log(\"space\");\r\n        break;\r\n    }\r\n  });\r\n})();\r\n\r\nexport { player };\r\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","module","exports","URL","parcelRequire","resolve","import","meta","url","toString","register","JSON","parse","$c10cff4223dc2e34$export$58825bda29b44ca2","constructor","position","velocity","this","radius","draw","$a8140fa968eb9a79$export$db3b6bfb95261072","beginPath","arc","x","y","Math","PI","fillStyle","fill","closePath","update","$c10cff4223dc2e34$export$c36c68baa13912a5","color","fades","opacity","save","globalAlpha","restore","$c10cff4223dc2e34$export$75fd1a05025ee885","width","height","fillRect","$a8140fa968eb9a79$export$67ea982130081db","document","querySelector","getContext","$a8140fa968eb9a79$var$Invader","image","Image","src","onload","drawImage","shoot","invaderProjectiles","push","$a8140fa968eb9a79$export$ef2184bd89960b14","invaders","columns","floor","random","rows","console","log","$35da740d59af89ba$var$scoreEl","$35da740d59af89ba$export$615455393ee443ca","rotation","translate","rotate","$35da740d59af89ba$var$projectiles","$35da740d59af89ba$var$grids","$35da740d59af89ba$var$invaderProjectiles","$35da740d59af89ba$var$particles","$35da740d59af89ba$var$keys","a","pressed","d","space","$35da740d59af89ba$var$frames","$35da740d59af89ba$var$randomInterval","$35da740d59af89ba$var$game","over","active","$35da740d59af89ba$var$score","$35da740d59af89ba$var$createParticules","object","i1","$35da740d59af89ba$var$animate","requestAnimationFrame","forEach","particle","i2","setTimeout","splice","invaderProjectile","index","projectile","grid","gridIndex","invader","i3","j","invaderFound","find","invader2","projectileFound","projectile2","innerHTML","firsInvader","lastInvader","addEventListener","key"],"version":3,"file":"index.b7d3aa40.js.map"}